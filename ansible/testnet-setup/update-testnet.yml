# vim:ft=yaml.ansible:

- hosts:
  - rchain-testnet
  roles:
  - role: docker-ce
    tags: setup

  tasks:

  - name: Stop and archive running rnode and autopropose
    script: ./stop-testnet-containers
    register: stop_rnode
    changed_when: "'Stopping' in stop_rnode.stdout"

  - name: Clean data directory
    file: state=absent path=/var/lib/rnode

  - name: Create data directory
    file: state=directory path=/var/lib/rnode

  - name: Copy files
    copy: src={{ item }} dest=/var/lib/rnode/ mode=preserve
    with_items:
    - bonds.txt
    - wallets.txt
    - autopropose
    - autopropose-single

  - name: Copy bootstrap node key and certificate
    when: kind == 'bootstrap'
    copy: src={{ item }} dest=/var/lib/rnode/ mode=preserve
    with_fileglob:
    - private/node.*.pem

  - import_tasks: start-rnode.task.yml
    when: kind == 'bootstrap'
    vars:
      rnode_add_args: >
        --standalone
        --has-faucet

  - name: Wait for bootstrap node to listen
    when: kind == 'bootstrap'
    wait_for:
      host: 0.0.0.0
      port: 40400
      delay: 120

  - import_tasks: start-rnode.task.yml
    when: kind != 'bootstrap'
    vars:
      rnode_add_args: >
        --bootstrap {{bootstrap}}
        --validator-private-key {{pk}}

  - name: Wait for validator node to listen
    when: kind != 'bootstrap'
    wait_for:
      host: 0.0.0.0
      port: 40400
      delay: 10

  - name: Start auto propose
    docker_container:
      name: autopropose
      image: rchain/rnode:{{ rel }}
      pull: yes
      recreate: yes
      network_mode: host
      volumes:
      - /var/lib/rnode:/var/lib/rnode
      entrypoint:
      - /var/lib/rnode/autopropose
      env:
        propose_contract: '{{ propose_contract }}'
        propose_delay_max: '{{ propose_delay_max }}'
        propose_delay_min: '{{ propose_delay_min }}'
        propose_mode: '{{ propose_mode }}'
        propose_validators: '{{ propose_validators }}'
